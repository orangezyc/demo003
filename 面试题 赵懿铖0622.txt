1.创建ajax过程

(1)创建XMLHttpRequest对象,也就是创建一个异步调用对象.

(2)创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息.

(3)设置响应HTTP请求状态变化的函数.

(4)发送HTTP请求.

(5)获取异步调用返回的数据.

(6)使用JavaScript和DOM实现局部刷新.


2.栈和队列的区别?

栈的插入和删除操作都是在一端进行的，而队列的操作却是在两端进行的。

队列先进先出，栈先进后出。

栈只允许在表尾一端进行插入和删除，而队列只允许在表尾一端进行插入，在表头一端进行删除

栈和堆的区别？

栈区（stack）―   由编译器自动分配释放   ，存放函数的参数值，局部变量的值等。

堆区（heap）   ―   一般由程序员分配释放，   若程序员不释放，程序结束时可能由OS回收。

堆（数据结构）：堆可以被看成是一棵树，如：堆排序；

栈（数据结构）：一种先进后出的数据结构。


3.你觉得jQuery或zepto源码有哪些写的好的地方

(答案仅供参考)

jQuery源码封装在一个匿名函数的自执行环境中，有助于防止变量的全局污染，然后通过传入window对象参数，可以使window对象作为局部变量使用，好处是当jQuery中访问window对象的时候，就不用将作用域链退回到顶层作用域了，从而可以更快的访问window对象。同样，传入undefined参数，可以缩短查找undefined时的作用域链。

    (function( window, undefined ) {

         //用一个函数域包起来，就是所谓的沙箱

         //在这里边var定义的变量，属于这个函数域内的局部变量，避免污染全局

         //把当前沙箱需要的外部变量通过函数参数引入进来

         //只要保证参数对内提供的接口的一致性，还可以随意替换传进来的这个参数

        window.jQuery = window.$ = jQuery;

    })( window );

jquery将一些原型属性和方法封装在了jquery.prototype中，为了缩短名称，又赋值给了jquery.fn，
这是很形象的写法。

有一些数组或对象的方法经常能使用到，jQuery将其保存为局部变量以提高访问速度。

jquery实现的链式调用可以节约代码，所返回的都是同一个对象，可以提高代码效率。

4为什么HTTPS安全

因为网络请求需要中间有很多的服务器路由器的转发。中间的节点都可能篡改信息，
而如果使用HTTPS，密钥在你和终点站才有。https之所以比http安全，
是因为他利用ssl/tls协议传输。它包含证书，卸载，流量转发，负载均衡，
页面适配，浏览器适配，refer传递等。保障了传输过程的安全性

5.请你谈谈Cookie的弊端
cookie虽然在持久保存客户端数据提供了方便，分担了服务器存储的负担，但还是有很多局限性的。
1).`Cookie`数量和长度的限制。每个domain最多只能有20条cookie，每个cookie长度不能超过4KB，否则会被截掉.

2).安全性问题。如果cookie被人拦截了，那人就可以取得所有的session信息。即使加密也与事无补，
因为拦截者并不需要知道cookie的意义，他只要原样转发cookie就可以达到目的了。

3).有些状态不可能保存在客户端。例如，为了防止重复提交表单，我们需要在服务器端保存一个计数器。
如果我们把这个计数器保存在客户端，那么它起不到任何作用。


6.如何删除一个cookie

1).将时间设为当前时间往前一点。
var date = new Date();

date.setDate(date.getDate() - 1);//真正的删除  setDate()方法用于设置一个月的某一天。

2).expires的设置
    document.cookie = 'user='+ encodeURIComponent('name')  + ';expires = ' + new Date(0)

7.快速 排序的思想并实现一个快排？
“快速排序”的思想很简单，整个排序过程只需要三步：
 (1）在数据集之中，找一个基准点
（2）建立两个数组，分别存储左边和右边的数组
（3）利用递归进行下次比较
